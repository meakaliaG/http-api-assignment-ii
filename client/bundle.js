/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client.js":
/*!***********************!*\
  !*** ./src/client.js ***!
  \***********************/
/***/ (() => {

eval("{const API_URL = 'http://localhost:3000';\n\nconst addUser = async (name, age) => {\n  try {\n    const response = await fetch(`${API_URL}/addUser`, {\n      method: 'POST',\n      headers: {\n         'Content-Type': 'application/json',\n          'Accept': 'application/json' },\n      body: JSON.stringify({ name, age }),\n    });\n\n    const content = document.getElementById('content');\n\n    // 204 No Content\n    if (response.status === 204) {\n      content.textContent = `User ${name} updated successfully.`;\n      return;\n    }\n\n    const json = await response.json();\n    content.textContent = `[${json.statusName}] ${json.message}`;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst sendRequest = async (path, method = 'GET') => {\n  try {\n    const response = await fetch(`${API_URL}${path}`, {\n      method,\n      headers: { 'Accept': 'application/json' },\n    });\n\n    const content = document.getElementById('content');\n\n    if (method === 'HEAD') {\n      content.textContent = `[HEAD] Status: ${response.status}`;\n      return;\n    }\n\n    const json = await response.json();\n    content.textContent = `[${json.statusName}] ${json.message}\n                        \\nUsers:${JSON.stringify(json.users || {}, null, 2)}`;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nwindow.onload = () => {\n    const nameForm = document.getElementById('nameForm');\n    const nameInput = document.getElementById('nameField');\n    const ageInput = document.getElementById('ageField');\n  \n    userForm.onsubmit = (e) => {\n        e.preventDefault(); \n    \n        const path = urlField.value;\n        const method = methodSelect.value.toUpperCase();\n        sendRequest(path, method);\n    };\n\n    nameForm.onsubmit = (e) => {\n      e.preventDefault(); \n  \n      const name = nameInput.value.trim();\n      const age = parseInt(ageInput.value, 10);\n  \n      if (!name || isNaN(age)) {\n        alert('Please enter a valid name and age.');\n        return;\n      }\n  \n      addUser(name, age);\n    };\n  };\n  \n\n\n// const sendRequest = async (url, method) => {\n//   try {\n//     const response = await fetch(url, { method });\n\n//     console.log('Status: ${response.status');\n\n//     if (method === 'HEAD') {\n//       console.log('HEAD request - no body');\n//       return;\n//     }\n\n//     if (response.status !== 204) {\n//       const json = await response.json();\n//       console.log(json);\n//     }\n//   } catch (err) {\n//     console.error(err);\n//   }\n// };\n\n// const API_URL = 'http://localhost:3000'; // Node API URL\n\n// const sendRequest = async (path, method = 'GET') => {\n//     try {\n//       const response = await fetch(`${API_URL}${path}`, {\n//         method,\n//         headers: {\n//           'Accept': 'application/json', // ensure JSON\n//         },\n//       });\n  \n//       console.log(`Status: ${response.status}`);\n  \n//       if (method === 'HEAD') return;\n  \n//       if (response.status !== 204) {\n//         const json = await response.json();\n//         console.log(json);\n//       }\n//     } catch (err) {\n//       console.error('Fetch error:', err);\n//     }\n//   };\n\n// const addUser = async (name, age) => {\n//   try {\n//     const response = await fetch(`${API_URL}/addUser`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json', // force JSON \n//       },\n//       body: JSON.stringify({ name, age }),\n//     });\n\n//     console.log(`Status: ${response.status}`);\n\n//     if (response.status !== 204) {\n//       const json = await response.json();\n//       console.log(json);\n//     }\n//   } catch (err) {\n//     console.error('Fetch error:', err);\n//   }\n// };\n\n// document.getElementById('addUserButton').addEventListener('click', () => {\n//   const name = document.getElementById('nameInput').value;\n//   const age = parseInt(document.getElementById('ageInput').value, 10);\n//   addUser(name, age);\n// });\n\n// window.onload = () => {\n//     const getBtn = document.getElementById('getBtn');\n//     const addBtn = document.getElementById('addBtn');\n//     const nameInput = document.getElementById('nameInput');\n//     const ageInput = document.getElementById('ageInput');\n  \n//     if (getBtn) {\n//       getBtn.onclick = () => sendRequest('/getUsers', 'GET');\n//     }\n  \n//     if (addBtn) {\n//       addBtn.onclick = () => {\n//         const name = nameInput.value.trim();\n//         const age = parseInt(ageInput.value, 10);\n  \n//         if (!name || isNaN(age)) {\n//           alert('Please enter a valid name and age.');\n//           return;\n//         }\n  \n//         addUser(name, age);\n//       };\n//     }\n//   };  \n  \n\n\n// const addUser = async (name, age) => {\n//   try {\n//     const response = await fetch('http://localhost:3000/addUser', {\n//       method: 'POST',\n//       headers: { \n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json', \n//         },\n//       body: JSON.stringify({ name, age }),\n//     });\n\n//     console.log(`Status: ${response.status}`);\n\n//     if (response.status !== 204) {\n//       const json = await response.json();\n//       console.log(json);\n//     }\n//   } catch (err) {\n//     console.error(err);\n//   }\n// };\n\n// // button connection\n// window.onload = () => {\n//   const getBtn = document.getElementById('getBtn');\n//   const addBtn = document.getElementById('addBtn');\n\n//   if (getBtn) {\n//     getBtn.onclick = () => sendRequest('/getUsers', 'GET');\n//   }\n//   if (addBtn) {\n//     addBtn.onclick = () => addUser('TestUser', 25);\n//   }\n// };\n\n\n//# sourceURL=webpack://http-api-assignment-ii/./src/client.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/client.js"]();
/******/ 	
/******/ })()
;